const ftp = require('basic-ftp');

async function diagnosticoCompleto() {
  console.log('üîç DIAGN√ìSTICO COMPLETO FTP - HOSTINGER\n');
  
  // Teste 1: Conectividade b√°sica
  console.log('üì° TESTE 1: Conectividade com servidor...');
  const client = new ftp.Client();
  
  try {
    await client.access({
      host: '185.245.180.69',
      user: 'anonymous', // Teste an√¥nimo primeiro
      password: 'anonymous',
      secure: false,
      port: 21
    });
    console.log('‚úÖ Servidor aceita conex√µes FTP');
  } catch (error) {
    console.log('‚ùå Servidor n√£o aceita FTP an√¥nimo:', error.message);
  }
  
  client.close();
  
  // Teste 2: Varia√ß√µes do usu√°rio
  console.log('\nüìã TESTE 2: Testando varia√ß√µes do usu√°rio...');
  
  const usuarios = [
    'u773500958.maginf.com.br',
    'u773500958',
    'maginf.com.br',
    'u773500958@maginf.com.br'
  ];
  
  for (const usuario of usuarios) {
    console.log(`\nüë§ Testando usu√°rio: ${usuario}`);
    
    const testClient = new ftp.Client();
    testClient.ftp.verbose = false;
    
    try {
      await testClient.access({
        host: '185.245.180.69',
        user: usuario,
        password: 'uQF]RGE$xMYZyp5#',
        secure: false,
        port: 21
      });
      
      console.log('‚úÖ SUCESSO! Usu√°rio correto:', usuario);
      testClient.close();
      return; // Parar se encontrar o correto
      
    } catch (error) {
      console.log(`‚ùå Falhou: ${error.message}`);
    }
    
    testClient.close();
  }
  
  // Teste 3: Hosts alternativos
  console.log('\nüåê TESTE 3: Testando hosts alternativos...');
  
  const hosts = [
    '185.245.180.69',
    'ftp.hostinger.com',
    'ftp.hostinger.com.br',
    'maginf.com.br'
  ];
  
  for (const host of hosts) {
    console.log(`\nüè† Testando host: ${host}`);
    
    const hostClient = new ftp.Client();
    hostClient.ftp.verbose = false;
    
    try {
      await hostClient.access({
        host: host,
        user: 'u773500958.maginf.com.br',
        password: 'uQF]RGE$xMYZyp5#',
        secure: false,
        port: 21
      });
      
      console.log('‚úÖ SUCESSO! Host correto:', host);
      hostClient.close();
      return;
      
    } catch (error) {
      console.log(`‚ùå Falhou: ${error.message}`);
    }
    
    hostClient.close();
  }
  
  // Teste 4: Portas alternativas
  console.log('\nüö™ TESTE 4: Testando portas alternativas...');
  
  const portas = [21, 22, 990, 2121];
  
  for (const porta of portas) {
    console.log(`\nüîå Testando porta: ${porta}`);
    
    const portClient = new ftp.Client();
    portClient.ftp.verbose = false;
    
    try {
      await portClient.access({
        host: '185.245.180.69',
        user: 'u773500958.maginf.com.br',
        password: 'uQF]RGE$xMYZyp5#',
        secure: porta === 22 || porta === 990,
        port: porta
      });
      
      console.log('‚úÖ SUCESSO! Porta correta:', porta);
      portClient.close();
      return;
      
    } catch (error) {
      console.log(`‚ùå Falhou: ${error.message}`);
    }
    
    portClient.close();
  }
  
  console.log('\nüìã RESUMO DO DIAGN√ìSTICO:');
  console.log('‚ùå Nenhuma combina√ß√£o funcionou');
  console.log('üîß RECOMENDA√á√ïES:');
  console.log('   1. Verificar credenciais no hPanel da Hostinger');
  console.log('   2. Criar nova conta FTP');
  console.log('   3. Contactar suporte Hostinger');
  console.log('   4. Usar deploy manual via Gerenciador de Arquivos');
}

diagnosticoCompleto();
