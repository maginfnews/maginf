"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/maginf/clientes/route";
exports.ids = ["app/api/maginf/clientes/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmaginf%2Fclientes%2Froute&page=%2Fapi%2Fmaginf%2Fclientes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmaginf%2Fclientes%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmaginf%2Fclientes%2Froute&page=%2Fapi%2Fmaginf%2Fclientes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmaginf%2Fclientes%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_app_maginf_dashboard_backup_app_api_maginf_clientes_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/maginf/clientes/route.ts */ \"(rsc)/./app/api/maginf/clientes/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/maginf/clientes/route\",\n        pathname: \"/api/maginf/clientes\",\n        filename: \"route\",\n        bundlePath: \"app/api/maginf/clientes/route\"\n    },\n    resolvedPagePath: \"C:\\\\app-maginf\\\\dashboard-backup\\\\app\\\\api\\\\maginf\\\\clientes\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_app_maginf_dashboard_backup_app_api_maginf_clientes_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/maginf/clientes/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtYWdpbmYlMkZjbGllbnRlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWFnaW5mJTJGY2xpZW50ZXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZtYWdpbmYlMkZjbGllbnRlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDYXBwLW1hZ2luZiU1Q2Rhc2hib2FyZC1iYWNrdXAlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNhcHAtbWFnaW5mJTVDZGFzaGJvYXJkLWJhY2t1cCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDc0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQtYmFja3VwLW1hZ2luZi8/ZTEyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxhcHAtbWFnaW5mXFxcXGRhc2hib2FyZC1iYWNrdXBcXFxcYXBwXFxcXGFwaVxcXFxtYWdpbmZcXFxcY2xpZW50ZXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21hZ2luZi9jbGllbnRlcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21hZ2luZi9jbGllbnRlc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvbWFnaW5mL2NsaWVudGVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcYXBwLW1hZ2luZlxcXFxkYXNoYm9hcmQtYmFja3VwXFxcXGFwcFxcXFxhcGlcXFxcbWFnaW5mXFxcXGNsaWVudGVzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9tYWdpbmYvY2xpZW50ZXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmaginf%2Fclientes%2Froute&page=%2Fapi%2Fmaginf%2Fclientes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmaginf%2Fclientes%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/maginf/clientes/route.ts":
/*!******************************************!*\
  !*** ./app/api/maginf/clientes/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_providers_maginf_platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/providers/maginf-platform */ \"(rsc)/./lib/providers/maginf-platform.ts\");\n\n\nasync function GET(request) {\n    try {\n        console.log(\"\\uD83D\\uDD0D API /maginf/clientes - Iniciando busca de clientes...\");\n        const maginfProvider = new _lib_providers_maginf_platform__WEBPACK_IMPORTED_MODULE_1__.MaginfPlatformProvider();\n        // Verificar conexão primeiro\n        const connectionStatus = await maginfProvider.checkConnection();\n        if (!connectionStatus.connected) {\n            console.log(\"❌ Conex\\xe3o com MAGINF falhou:\", connectionStatus.message);\n            // Retornar dados de demonstração\n            const demoClients = [\n                {\n                    id: 123001,\n                    name: \"Empresa Alpha Ltda\",\n                    email: \"contato@alpha.com.br\",\n                    company: \"Alpha Tecnologia\",\n                    level: \"EndCustomer\",\n                    state: \"Registered\",\n                    serviceType: \"AllInclusive\",\n                    devices: 5,\n                    lastBackup: \"2025-10-20T18:30:00Z\",\n                    backupStatus: \"Success\"\n                },\n                {\n                    id: 123002,\n                    name: \"Beta Solu\\xe7\\xf5es\",\n                    email: \"admin@beta.com.br\",\n                    company: \"Beta Consultoria\",\n                    level: \"EndCustomer\",\n                    state: \"Registered\",\n                    serviceType: \"SoftwareOnly\",\n                    devices: 3,\n                    lastBackup: \"2025-10-20T17:45:00Z\",\n                    backupStatus: \"CompletedWithErrors\"\n                },\n                {\n                    id: 123003,\n                    name: \"Gamma Ind\\xfastria\",\n                    email: \"ti@gamma.com.br\",\n                    company: \"Gamma Manufacturing\",\n                    level: \"EndCustomer\",\n                    state: \"InTrial\",\n                    serviceType: \"AllInclusive\",\n                    devices: 8,\n                    lastBackup: \"2025-10-19T22:30:00Z\",\n                    backupStatus: \"Failed\"\n                }\n            ];\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                clients: demoClients,\n                total: demoClients.length,\n                demo: true,\n                error: connectionStatus.message,\n                provider: \"MAGINF Platform (Demo)\",\n                timestamp: new Date().toISOString()\n            });\n        }\n        // Buscar clientes reais da MAGINF\n        console.log(\"✅ Conex\\xe3o OK - Buscando clientes reais...\");\n        const clients = await maginfProvider.listClients();\n        // Enriquecer dados com estatísticas de backup (opcional, pode ser lento)\n        const { searchParams } = new URL(request.url);\n        const includeStats = searchParams.get(\"includeStats\") === \"true\";\n        if (includeStats && clients.length > 0) {\n            console.log(\"\\uD83D\\uDCCA Incluindo estat\\xedsticas de backup...\");\n            for (const client of clients.slice(0, 5)){\n                try {\n                    const stats = await maginfProvider.getClientBackupStats(client.id);\n                    client.devices = stats.totalDevices;\n                    client.lastBackup = stats.lastBackup || undefined;\n                    client.backupStatus = stats.successfulBackups > 0 ? \"Success\" : stats.failedBackups > 0 ? \"Failed\" : \"Unknown\";\n                } catch (error) {\n                    console.log(`⚠️ Erro ao obter stats do cliente ${client.id}:`, error);\n                }\n            }\n        }\n        console.log(`✅ ${clients.length} clientes MAGINF encontrados`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            clients: clients,\n            total: clients.length,\n            demo: false,\n            provider: \"MAGINF Platform\",\n            connection: connectionStatus,\n            timestamp: new Date().toISOString(),\n            includeStats: includeStats\n        });\n    } catch (error) {\n        console.error(\"❌ Erro na API /maginf/clientes:\", error);\n        // Fallback para dados de demonstração\n        const demoClients = [\n            {\n                id: 123001,\n                name: \"Empresa Alpha Ltda - DEMO\",\n                email: \"demo@alpha.com.br\",\n                company: \"Alpha Tecnologia (Demo)\",\n                level: \"EndCustomer\",\n                state: \"Registered\",\n                serviceType: \"AllInclusive\"\n            }\n        ];\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            clients: demoClients,\n            total: demoClients.length,\n            demo: true,\n            error: error instanceof Error ? error.message : \"Erro desconhecido\",\n            provider: \"MAGINF Platform (Error Fallback)\",\n            timestamp: new Date().toISOString()\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/maginf/clientes/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/providers/maginf-platform.ts":
/*!******************************************!*\
  !*** ./lib/providers/maginf-platform.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaginfPlatformProvider: () => (/* binding */ MaginfPlatformProvider)\n/* harmony export */ });\n// Provider para API da Plataforma MAGINF\n// Integração com N-able Cove usando credenciais da MAGINF\nclass MaginfPlatformProvider {\n    constructor(){\n        this.baseUrl = \"https://api.backup.management/jsonapi\";\n        this.visaCache = null;\n        this.credentials = {\n            platformUser: \"maicon@maginf.com.br\",\n            platformPassword: \"@@Maginf_301\",\n            apiUser: \"API-USER-DASHBOARD\",\n            apiKey: \"Vp?Fm$k@il!1M6298b0B!y$v\"\n        };\n    }\n    async getVisa() {\n        // Verificar cache do visa\n        if (this.visaCache && Date.now() < this.visaCache.expiresAt) {\n            return this.visaCache.visa;\n        }\n        console.log(\"\\uD83D\\uDD10 Fazendo login na plataforma MAGINF...\");\n        const loginPayload = {\n            jsonrpc: \"2.0\",\n            method: \"Login\",\n            params: {\n                username: this.credentials.apiUser,\n                password: this.credentials.apiKey\n            },\n            id: \"1\"\n        };\n        const response = await fetch(this.baseUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(loginPayload)\n        });\n        if (!response.ok) {\n            throw new Error(`Login MAGINF falhou: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.error) {\n            throw new Error(`Erro login MAGINF: ${data.error.message}`);\n        }\n        if (!data.visa) {\n            throw new Error(\"Login MAGINF: Visa n\\xe3o retornado\");\n        }\n        // Cache por 15 minutos\n        this.visaCache = {\n            visa: data.visa,\n            expiresAt: Date.now() + 15 * 60 * 1000\n        };\n        console.log(\"✅ Login MAGINF realizado com sucesso\");\n        return data.visa;\n    }\n    async callApi(method, params = {}) {\n        const visa = await this.getVisa();\n        const payload = {\n            jsonrpc: \"2.0\",\n            method,\n            visa: visa,\n            params,\n            id: Date.now().toString()\n        };\n        const response = await fetch(this.baseUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n            throw new Error(`API MAGINF falhou: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.error) {\n            throw new Error(`Erro API MAGINF: ${data.error.message || \"Unknown error\"}`);\n        }\n        return data;\n    }\n    // Listar todos os clientes gerenciados pela MAGINF\n    async listClients() {\n        try {\n            console.log(\"\\uD83D\\uDCCB Listando clientes da MAGINF...\");\n            // Usar o Partner ID da MAGINF como root\n            const maginfPartnerId = 2871061; // ID da MAGINF na plataforma N-able\n            const response = await this.callApi(\"EnumeratePartners\", {\n                parentPartnerId: maginfPartnerId,\n                fields: [\n                    0,\n                    1,\n                    3,\n                    4,\n                    5,\n                    8,\n                    10,\n                    18,\n                    20\n                ],\n                fetchRecursively: true\n            });\n            const partners = response.result?.result || [];\n            console.log(`📊 ${partners.length} partners encontrados na MAGINF`);\n            // Transformar partners em clientes MAGINF\n            const clients = partners.map((partner)=>({\n                    id: partner.Id,\n                    name: partner.Name || \"Cliente sem nome\",\n                    email: partner.Company?.Email || partner.ExternalCode || undefined,\n                    company: partner.Company?.Name || partner.Name,\n                    level: partner.Level || \"Unknown\",\n                    state: partner.State || \"Unknown\",\n                    serviceType: partner.ServiceType || \"Unknown\",\n                    devices: 0,\n                    lastBackup: undefined,\n                    backupStatus: \"Unknown\"\n                }));\n            // Filtrar apenas clientes finais (EndCustomer)\n            const endCustomers = clients.filter((client)=>client.level === \"EndCustomer\" || client.level === \"SubDistributor\");\n            console.log(`🎯 ${endCustomers.length} clientes finais encontrados`);\n            return endCustomers;\n        } catch (error) {\n            console.error(\"❌ Erro ao listar clientes MAGINF:\", error);\n            // Retornar clientes de demonstração em caso de erro\n            return this.getDemoClients();\n        }\n    }\n    // Obter informações detalhadas de um cliente específico\n    async getClientDetails(clientId) {\n        try {\n            console.log(`🔍 Obtendo detalhes do cliente ${clientId}...`);\n            const response = await this.callApi(\"GetPartnerInfoById\", {\n                partnerId: clientId\n            });\n            const partner = response.result;\n            if (!partner) {\n                return null;\n            }\n            return {\n                id: partner.Id,\n                name: partner.Name || \"Cliente sem nome\",\n                email: partner.Company?.Email || undefined,\n                company: partner.Company?.Name || partner.Name,\n                level: partner.Level || \"Unknown\",\n                state: partner.State || \"Unknown\",\n                serviceType: partner.ServiceType || \"Unknown\",\n                devices: 0,\n                lastBackup: undefined,\n                backupStatus: \"Unknown\"\n            };\n        } catch (error) {\n            console.error(`❌ Erro ao obter detalhes do cliente ${clientId}:`, error);\n            return null;\n        }\n    }\n    // Obter estatísticas de backup de um cliente\n    async getClientBackupStats(clientId) {\n        try {\n            console.log(`📊 Obtendo estatísticas de backup do cliente ${clientId}...`);\n            const response = await this.callApi(\"EnumerateAccountStatistics\", {\n                query: {\n                    PartnerId: clientId,\n                    SelectionMode: \"Merged\",\n                    StartRecordNumber: 0,\n                    RecordsCount: 100,\n                    Columns: [\n                        \"I1\",\n                        \"F17\",\n                        \"F18\"\n                    ] // DeviceName, LastStatus, LastBackupTime\n                }\n            });\n            const devices = response.result?.result || [];\n            const stats = {\n                totalDevices: devices.length,\n                successfulBackups: 0,\n                failedBackups: 0,\n                warningBackups: 0,\n                lastBackup: null\n            };\n            devices.forEach((device)=>{\n                const settings = Object.assign({}, ...device.Settings);\n                const status = settings.F17;\n                const lastBackup = settings.F18;\n                if (status === \"Success\") stats.successfulBackups++;\n                else if (status === \"Failed\") stats.failedBackups++;\n                else if (status === \"CompletedWithErrors\") stats.warningBackups++;\n                if (lastBackup && (!stats.lastBackup || lastBackup > stats.lastBackup)) {\n                    stats.lastBackup = lastBackup;\n                }\n            });\n            return stats;\n        } catch (error) {\n            console.error(`❌ Erro ao obter estatísticas do cliente ${clientId}:`, error);\n            return {\n                totalDevices: 0,\n                successfulBackups: 0,\n                failedBackups: 0,\n                warningBackups: 0,\n                lastBackup: null\n            };\n        }\n    }\n    // Clientes de demonstração para fallback\n    getDemoClients() {\n        return [\n            {\n                id: 123001,\n                name: \"Empresa Alpha Ltda\",\n                email: \"contato@alpha.com.br\",\n                company: \"Alpha Tecnologia\",\n                level: \"EndCustomer\",\n                state: \"Registered\",\n                serviceType: \"AllInclusive\",\n                devices: 5,\n                lastBackup: \"2025-10-20T18:30:00Z\",\n                backupStatus: \"Success\"\n            },\n            {\n                id: 123002,\n                name: \"Beta Solu\\xe7\\xf5es\",\n                email: \"admin@beta.com.br\",\n                company: \"Beta Consultoria\",\n                level: \"EndCustomer\",\n                state: \"Registered\",\n                serviceType: \"SoftwareOnly\",\n                devices: 3,\n                lastBackup: \"2025-10-20T17:45:00Z\",\n                backupStatus: \"CompletedWithErrors\"\n            },\n            {\n                id: 123003,\n                name: \"Gamma Ind\\xfastria\",\n                email: \"ti@gamma.com.br\",\n                company: \"Gamma Manufacturing\",\n                level: \"EndCustomer\",\n                state: \"InTrial\",\n                serviceType: \"AllInclusive\",\n                devices: 8,\n                lastBackup: \"2025-10-19T22:30:00Z\",\n                backupStatus: \"Failed\"\n            }\n        ];\n    }\n    // Verificar status da conexão\n    async checkConnection() {\n        try {\n            await this.getVisa();\n            return {\n                connected: true,\n                message: \"Conectado \\xe0 plataforma MAGINF com sucesso\"\n            };\n        } catch (error) {\n            return {\n                connected: false,\n                message: error instanceof Error ? error.message : \"Erro desconhecido\"\n            };\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/providers/maginf-platform.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmaginf%2Fclientes%2Froute&page=%2Fapi%2Fmaginf%2Fclientes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmaginf%2Fclientes%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();