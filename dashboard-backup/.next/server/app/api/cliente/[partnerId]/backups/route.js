"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/cliente/[partnerId]/backups/route";
exports.ids = ["app/api/cliente/[partnerId]/backups/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&page=%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&page=%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_app_maginf_dashboard_backup_app_api_cliente_partnerId_backups_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/cliente/[partnerId]/backups/route.ts */ \"(rsc)/./app/api/cliente/[partnerId]/backups/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/cliente/[partnerId]/backups/route\",\n        pathname: \"/api/cliente/[partnerId]/backups\",\n        filename: \"route\",\n        bundlePath: \"app/api/cliente/[partnerId]/backups/route\"\n    },\n    resolvedPagePath: \"C:\\\\app-maginf\\\\dashboard-backup\\\\app\\\\api\\\\cliente\\\\[partnerId]\\\\backups\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_app_maginf_dashboard_backup_app_api_cliente_partnerId_backups_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/cliente/[partnerId]/backups/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGllbnRlJTJGJTVCcGFydG5lcklkJTVEJTJGYmFja3VwcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGY2xpZW50ZSUyRiU1QnBhcnRuZXJJZCU1RCUyRmJhY2t1cHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZjbGllbnRlJTJGJTVCcGFydG5lcklkJTVEJTJGYmFja3VwcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDYXBwLW1hZ2luZiU1Q2Rhc2hib2FyZC1iYWNrdXAlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNhcHAtbWFnaW5mJTVDZGFzaGJvYXJkLWJhY2t1cCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUM7QUFDaEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQtYmFja3VwLW1hZ2luZi8/Y2Q4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxhcHAtbWFnaW5mXFxcXGRhc2hib2FyZC1iYWNrdXBcXFxcYXBwXFxcXGFwaVxcXFxjbGllbnRlXFxcXFtwYXJ0bmVySWRdXFxcXGJhY2t1cHNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NsaWVudGUvW3BhcnRuZXJJZF0vYmFja3Vwcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NsaWVudGUvW3BhcnRuZXJJZF0vYmFja3Vwc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2xpZW50ZS9bcGFydG5lcklkXS9iYWNrdXBzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcYXBwLW1hZ2luZlxcXFxkYXNoYm9hcmQtYmFja3VwXFxcXGFwcFxcXFxhcGlcXFxcY2xpZW50ZVxcXFxbcGFydG5lcklkXVxcXFxiYWNrdXBzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jbGllbnRlL1twYXJ0bmVySWRdL2JhY2t1cHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&page=%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/cliente/[partnerId]/backups/route.ts":
/*!******************************************************!*\
  !*** ./app/api/cliente/[partnerId]/backups/route.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_providers_cove__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/providers/cove */ \"(rsc)/./lib/providers/cove.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./lib/utils.ts\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\n\n\n// Rate limiting simples (em produção, usar Redis)\nconst rateLimitMap = new Map();\nconst RATE_LIMIT = 60; // requests por minuto\nconst RATE_WINDOW = 60 * 1000; // 1 minuto\nfunction checkRateLimit(ip) {\n    const now = Date.now();\n    const record = rateLimitMap.get(ip);\n    if (!record || now > record.resetTime) {\n        rateLimitMap.set(ip, {\n            count: 1,\n            resetTime: now + RATE_WINDOW\n        });\n        return true;\n    }\n    if (record.count >= RATE_LIMIT) {\n        return false;\n    }\n    record.count++;\n    return true;\n}\nasync function GET(request, { params }) {\n    try {\n        // Rate limiting\n        const headersList = (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.headers)();\n        const ip = headersList.get(\"x-forwarded-for\") || headersList.get(\"x-real-ip\") || \"unknown\";\n        if (!checkRateLimit(ip)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Rate limit exceeded\"\n            }, {\n                status: 429\n            });\n        }\n        // Sanitizar e validar parâmetros\n        const partnerId = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeString)(params.partnerId);\n        if (!partnerId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Partner ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const q = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeString)(searchParams.get(\"q\") || undefined);\n        const status = searchParams.get(\"status\");\n        const page = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeNumber)(searchParams.get(\"page\") || \"1\");\n        const pageSize = Math.min((0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeNumber)(searchParams.get(\"pageSize\") || \"50\"), 200 // Máximo 200 por página\n        );\n        // Validar status se fornecido\n        const validStatuses = [\n            \"Success\",\n            \"Failed\",\n            \"CompletedWithErrors\",\n            \"InProgress\",\n            \"NeverRun\",\n            \"Unknown\"\n        ];\n        if (status && !validStatuses.includes(status)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid status parameter\"\n            }, {\n                status: 400\n            });\n        }\n        // Executar chamada apenas para o Cove Provider (N-able)\n        try {\n            const coveProvider = new _lib_providers_cove__WEBPACK_IMPORTED_MODULE_1__.CoveProvider();\n            const result = await coveProvider.listStatus({\n                partnerId,\n                q,\n                status: status || undefined,\n                page,\n                pageSize\n            });\n            const allItems = result.items;\n            const totalCount = result.total;\n            // Calcular KPIs\n            const kpis = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.calculateKPIs)(allItems);\n            // Ordenar por nome do dispositivo\n            allItems.sort((a, b)=>a.deviceName.localeCompare(b.deviceName));\n            // Paginação final (se necessário)\n            const startIndex = (page - 1) * pageSize;\n            const paginatedItems = allItems.slice(startIndex, startIndex + pageSize);\n            const response = {\n                items: paginatedItems,\n                meta: {\n                    total: totalCount,\n                    page,\n                    pageSize,\n                    lastSyncAt: new Date().toISOString()\n                },\n                kpis\n            };\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n        } catch (coveError) {\n            console.error(\"Cove Provider error:\", coveError);\n            // Retornar resposta vazia em caso de erro\n            const emptyResponse = {\n                items: [],\n                meta: {\n                    total: 0,\n                    page,\n                    pageSize,\n                    lastSyncAt: new Date().toISOString()\n                },\n                kpis: {\n                    total: 0,\n                    success: 0,\n                    warnings: 0,\n                    failed: 0,\n                    inProgress: 0,\n                    neverRun: 0\n                }\n            };\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(emptyResponse);\n        }\n    } catch (error) {\n        console.error(\"API Error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\",\n            message:  true ? error.message : 0\n        }, {\n            status: 500\n        });\n    }\n}\n// Método OPTIONS para CORS (se necessário)\nasync function OPTIONS() {\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n        status: 200,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/cliente/[partnerId]/backups/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/providers/cove.ts":
/*!*******************************!*\
  !*** ./lib/providers/cove.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CoveProvider: () => (/* binding */ CoveProvider)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(rsc)/./lib/utils.ts\");\n\nclass CoveProvider {\n    getHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${this.apiKey}`\n        };\n    }\n    async getVisa() {\n        // Verificar cache do visa (expira em ~15 min)\n        if (this.visaCache && Date.now() < this.visaCache.expiresAt) {\n            return this.visaCache.visa;\n        }\n        const loginPayload = {\n            jsonrpc: \"2.0\",\n            method: \"Login\",\n            params: {\n                username: \"API-USER-DASHBOARD\",\n                password: this.apiKey\n            },\n            id: \"1\"\n        };\n        const response = await fetch(this.baseUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(loginPayload)\n        });\n        if (!response.ok) {\n            throw new Error(`Cove login failed: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.error) {\n            throw new Error(`Cove login error: ${data.error.message}`);\n        }\n        if (!data.visa) {\n            throw new Error(\"Cove login error: No visa returned\");\n        }\n        // Cache por 15 minutos\n        this.visaCache = {\n            visa: data.visa,\n            expiresAt: Date.now() + 15 * 60 * 1000\n        };\n        return data.visa;\n    }\n    async call(method, params = {}) {\n        const visa = await this.getVisa();\n        const payload = {\n            jsonrpc: \"2.0\",\n            method,\n            visa: visa,\n            params,\n            id: Date.now().toString()\n        };\n        const response = await fetch(this.baseUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n            throw new Error(`Cove API call failed: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.error) {\n            throw new Error(`Cove API error: ${data.error.message || \"Unknown error\"}`);\n        }\n        return data;\n    }\n    async listPartners(parentPartnerId) {\n        try {\n            const response = await this.call(\"EnumeratePartners\", {\n                parentPartnerId: parentPartnerId || Number(this.partnerId),\n                fields: [\n                    0,\n                    1,\n                    3,\n                    4,\n                    5,\n                    8,\n                    10,\n                    20\n                ],\n                fetchRecursively: true\n            });\n            return response.result?.result || [];\n        } catch (error) {\n            console.error(\"CoveProvider listPartners error:\", error);\n            return [];\n        }\n    }\n    async listStatus(params) {\n        const { partnerId, q, status, page = 1, pageSize = 50 } = params;\n        try {\n            // Colunas necessárias do Cove conforme documentação\n            const columns = [\n                \"I1\",\n                \"F17\",\n                \"F18\"\n            ];\n            const response = await this.call(\"EnumerateAccountStatistics\", {\n                query: {\n                    PartnerId: Number(partnerId),\n                    SelectionMode: \"Merged\",\n                    StartRecordNumber: (page - 1) * pageSize,\n                    RecordsCount: pageSize,\n                    Columns: columns\n                }\n            });\n            const rawItems = response?.result?.result ?? [];\n            const items = rawItems.map((item)=>{\n                const settings = Object.assign({}, ...item.Settings);\n                const deviceName = settings.I1 || \"Unknown Device\";\n                return {\n                    id: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.generateId)(\"cove\", deviceName),\n                    deviceName: deviceName,\n                    kind: \"Server\",\n                    source: \"A\",\n                    lastStatus: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.mapCoveStatus)(settings.F17),\n                    lastCompletedAt: settings.F18 ? (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toISO)(settings.F18) : undefined,\n                    raw: settings\n                };\n            });\n            // Aplicar filtros\n            let filteredItems = items;\n            if (q) {\n                filteredItems = filteredItems.filter((item)=>item.deviceName.toLowerCase().includes(q.toLowerCase()));\n            }\n            if (status) {\n                filteredItems = filteredItems.filter((item)=>item.lastStatus === status);\n            }\n            return {\n                items: filteredItems,\n                total: filteredItems.length\n            };\n        } catch (error) {\n            console.error(\"CoveProvider error:\", error);\n            console.log(\"API Key usado:\", this.apiKey ? `${this.apiKey.substring(0, 10)}...` : \"n\\xe3o definido\");\n            console.log(\"Partner ID usado:\", this.partnerId);\n            return {\n                items: [],\n                total: 0\n            };\n        }\n    }\n    constructor(){\n        this.baseUrl = \"https://api.backup.management/jsonapi\";\n        this.apiKey = process.env.COVE_API_KEY;\n        this.partnerId = process.env.COVE_PARTNER_ID;\n        this.visaCache = null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/providers/cove.ts\n");

/***/ }),

/***/ "(rsc)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateKPIs: () => (/* binding */ calculateKPIs),\n/* harmony export */   formatDateBR: () => (/* binding */ formatDateBR),\n/* harmony export */   generateId: () => (/* binding */ generateId),\n/* harmony export */   getSourceLabel: () => (/* binding */ getSourceLabel),\n/* harmony export */   getStatusColor: () => (/* binding */ getStatusColor),\n/* harmony export */   getStatusLabel: () => (/* binding */ getStatusLabel),\n/* harmony export */   mapCoveStatus: () => (/* binding */ mapCoveStatus),\n/* harmony export */   mapGenericStatus: () => (/* binding */ mapGenericStatus),\n/* harmony export */   mapType: () => (/* binding */ mapType),\n/* harmony export */   paginate: () => (/* binding */ paginate),\n/* harmony export */   sanitizeNumber: () => (/* binding */ sanitizeNumber),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   toISO: () => (/* binding */ toISO)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n// Mapeamento de status do Cove\nconst mapCoveStatus = (s)=>{\n    const statusMap = {\n        \"Success\": \"Success\",\n        \"Failed\": \"Failed\",\n        \"Completed with errors\": \"CompletedWithErrors\",\n        \"In progress\": \"InProgress\",\n        \"Never run\": \"NeverRun\"\n    };\n    return statusMap[s] ?? \"Unknown\";\n};\n// Mapeamento de status genérico (API B)\nconst mapGenericStatus = (s)=>{\n    const key = s.toLowerCase();\n    if ([\n        \"ok\",\n        \"success\",\n        \"successful\"\n    ].includes(key)) return \"Success\";\n    if ([\n        \"warn\",\n        \"warning\",\n        \"partial\",\n        \"partial_success\"\n    ].includes(key)) return \"CompletedWithErrors\";\n    if ([\n        \"error\",\n        \"fail\",\n        \"failed\"\n    ].includes(key)) return \"Failed\";\n    if ([\n        \"running\",\n        \"inprogress\",\n        \"in_progress\"\n    ].includes(key)) return \"InProgress\";\n    if ([\n        \"never\",\n        \"never_run\",\n        \"neverrun\"\n    ].includes(key)) return \"NeverRun\";\n    return \"Unknown\";\n};\n// Mapeamento de tipo de dispositivo\nconst mapType = (t)=>t?.toLowerCase().includes(\"server\") ? \"Server\" : \"Workstation\";\n// Conversão para ISO string\nconst toISO = (v)=>v ? new Date(v).toISOString() : undefined;\n// Geração de hash para ID\nconst generateId = (source, deviceName)=>{\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha1\").update(`${source}:${deviceName}`).digest(\"hex\").substring(0, 12);\n};\n// Formatação de data para pt-BR\nconst formatDateBR = (isoString)=>{\n    if (!isoString) return \"—\";\n    const date = new Date(isoString);\n    return new Intl.DateTimeFormat(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        timeZone: \"America/Sao_Paulo\"\n    }).format(date);\n};\n// Cálculo de KPIs\nconst calculateKPIs = (items)=>{\n    const total = items.length;\n    const success = items.filter((i)=>i.lastStatus === \"Success\").length;\n    const warnings = items.filter((i)=>i.lastStatus === \"CompletedWithErrors\").length;\n    const failed = items.filter((i)=>i.lastStatus === \"Failed\").length;\n    const inProgress = items.filter((i)=>i.lastStatus === \"InProgress\").length;\n    const neverRun = items.filter((i)=>i.lastStatus === \"NeverRun\").length;\n    return {\n        total,\n        success,\n        warnings,\n        failed,\n        inProgress,\n        neverRun\n    };\n};\n// Paginação\nconst paginate = (items, page, pageSize)=>{\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    return {\n        items: items.slice(startIndex, endIndex),\n        total: items.length,\n        page,\n        pageSize,\n        totalPages: Math.ceil(items.length / pageSize)\n    };\n};\n// Sanitização de parâmetros\nconst sanitizeString = (str)=>{\n    if (!str) return undefined;\n    return str.replace(/[<>\\\"'&]/g, \"\").trim();\n};\nconst sanitizeNumber = (num)=>{\n    if (typeof num === \"number\") return Math.max(1, Math.floor(num));\n    if (!num) return 1;\n    const parsed = parseInt(num.toString(), 10);\n    return isNaN(parsed) ? 1 : Math.max(1, parsed);\n};\n// Cores por status\nconst getStatusColor = (status)=>{\n    const colors = {\n        Success: \"text-green-600 bg-green-50 border-green-200\",\n        Failed: \"text-red-600 bg-red-50 border-red-200\",\n        CompletedWithErrors: \"text-yellow-600 bg-yellow-50 border-yellow-200\",\n        InProgress: \"text-blue-600 bg-blue-50 border-blue-200\",\n        NeverRun: \"text-gray-600 bg-gray-50 border-gray-200\",\n        Unknown: \"text-gray-600 bg-gray-50 border-gray-200\"\n    };\n    return colors[status];\n};\n// Labels em português\nconst getStatusLabel = (status)=>{\n    const labels = {\n        Success: \"Sucesso\",\n        Failed: \"Falhou\",\n        CompletedWithErrors: \"Com Avisos\",\n        InProgress: \"Em Progresso\",\n        NeverRun: \"Nunca Executou\",\n        Unknown: \"Desconhecido\"\n    };\n    return labels[status];\n};\nconst getSourceLabel = (source)=>{\n    const labels = {\n        A: \"Servidores\",\n        B: \"Esta\\xe7\\xf5es\"\n    };\n    return labels[source] || source;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&page=%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcliente%2F%5BpartnerId%5D%2Fbackups%2Froute.ts&appDir=C%3A%5Capp-maginf%5Cdashboard-backup%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Capp-maginf%5Cdashboard-backup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();